WHITESPACE = _{ " " | NEWLINE }

chunk                     =  { block }
block                     =  { stat* ~ retstat? }
stat                      =  {
    semicolon
  | local_declaration
  | function_call
  | assignment
  | label
  | break
  | goto
  | scope
  | while
  | repeat
  | if
  | numeric_for
  | generic_for
  | function_definition
  | local_function_definition
}
generic_for               =  { "for" ~ identifier_list ~ "in" ~ explist ~ "do" ~ block ~ "end" }
numeric_for               =  { "for" ~ identifier ~ "=" ~ exp ~ "," ~ exp ~ ("," ~ exp)? ~ "do" ~ block ~ "end" }
if                        =  { "if" ~ exp ~ "then" ~ block ~ ("elseif" ~ exp ~ "then" ~ block)* ~ ("else" ~ block)? ~ "end" }
repeat                    =  { "repeat" ~ block ~ "until" ~ exp }
while                     =  { "while" ~ exp ~ "do" ~ block ~ "end" }
scope                     =  { "do" ~ block ~ "end" }
goto                      =  { "goto" ~ identifier }
break                     =  { "break" }
semicolon                 =  { ";" }
assignment                =  { varlist ~ "=" ~ explist }
local_declaration         =  { "local" ~ varlist ~ ("=" ~ explist)? }
label                     =  { "::" ~ identifier ~ "::" }
retstat                   =  { "return" ~ explist ~ ";"? }

number                    = @{ ASCII_DIGIT+ }
string                    = @{ "\"" ~ (ASCII_ALPHANUMERIC | " ")* ~ "\"" }
identifier                = @{ (ASCII_ALPHA | "_") ~ ASCII_ALPHANUMERIC* }

table_lookup              = @{ identifier ~ ("." ~ identifier)+ }
variable                  =  { table_lookup | identifier }
varlist                   =  { variable ~ ("," ~ variable)* }
identifier_list           =  { identifier ~ ("," ~ identifier)* }
function_args             =  { "(" ~ explist? ~ ")" | table_constructor | string }
table_constructor         =  { "{" ~ field_list? ~ "}" }
field_list                =  { field ~ (field_sep ~ field)* ~ field_sep? }
field                     =  { "[" ~ exp ~ "]" ~ "=" ~ exp | identifier ~ "=" ~ exp | exp }
field_sep                 = _{ "," | ";" }
variable_argument         =  { "..." }
parameter_list            =  { (identifier_list ~ ("," ~ variable_argument)?) | "..." }
anon_function_definition  =  { "function" ~ "(" ~ parameter_list? ~ ")" ~ block ~ "end" }
function_definition       =  { "function" ~ identifier ~ "(" ~ parameter_list? ~ ")" ~ block ~ "end" }
local_function_definition =  { "local" ~ function_definition }

binop   = { "+" | "-" | "*" | "/" | "//" | "^" | "%" | "&" | "~" | "|" | ">>" | "<<" | ".." | "<" | "<=" | ">" | ">=" | "==" | "~=" | "and" | "or" }
unop    = { "-" | "not" | "#" | "~" }
boolean = { "false" | "true" }
nil     = { "nil" }

prefixexp = { "(" ~ exp ~ ")" }
explist   = { exp ~ ("," ~ exp)* }

function_call = { exp ~ (":" ~ identifier)? ~ function_args }
exp       = { (prefixexp | function_call | anon_function_definition | variable_argument | boolean | nil | variable | number | string | table_constructor | unop ~ exp) ~ (binop ~ exp)* }
